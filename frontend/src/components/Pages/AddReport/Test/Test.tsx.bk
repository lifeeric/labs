import React, { useRef, useState } from "react"
import ReactToPrint from "react-to-print"
import { ComponentToPrint } from "../PrintTemplate/PrintTemplate"
import { useForm } from "react-hook-form"
import * as XLSX from "xlsx"
import { makeStyles } from "@material-ui/core/styles"
import Table from "@material-ui/core/Table"
import TableBody from "@material-ui/core/TableBody"
import TableCell from "@material-ui/core/TableCell"
import TableContainer from "@material-ui/core/TableContainer"
import TableHead from "@material-ui/core/TableHead"
import TableRow from "@material-ui/core/TableRow"
import Paper from "@material-ui/core/Paper"
import TextField from "@material-ui/core/TextField"

import "./Test.scss"

const useStyles = makeStyles({
  table: {
    minWidth: 650,
  },
})

interface Props {
  resultData: any[]
}

export const Test: React.FC<Props> = ({ resultData }) => {
  const componentRef = useRef<any>()
  const [result, setResult] = useState<any>()
  const [items, setItems] = useState<any[]>([])
  const { register, handleSubmit } = useForm()
  const [data, setData] = useState<any>(resultData)
  const classes = useStyles()

  console.log(data, " => Result")
  if (!resultData) return null

  const printOut = () => {
    return <button>Print this out!</button>
  }

  const readExcel = async (file: any) => {
    const fileReader = await new FileReader()
    fileReader.readAsArrayBuffer(file)

    fileReader.onload = (e: any) => {
      const bufferArray = e?.target.result
      const wb = XLSX.read(bufferArray, { type: "buffer" })
      const wsname = wb.SheetNames[0]
      const ws = wb.Sheets[wsname]

      const data = XLSX.utils.sheet_to_json(ws)
      console.log(data)
      setItems(data)
    }
  }

  const changeResults = (e: any, index: number) => {
    const name = e.target.value
    console.log(name, index)
    const newItems: any = [...items]
    newItems[index]["Results"] = name
    setItems(newItems)
  }

  return (
    <div>
      {/* //   <table>
    //     <thead>
    //       <tr>
    //         <th>Test</th>
    //         <th>Normal Ranges</th>
    //         <th>Unit</th>
    //         <th>Results</th>
    //       </tr>
    //     </thead>
    //     <tbody>
    //       <tr key={resultData.Test}>
    //         <td>
    //           <input type="text" value={resultData.test} />
    //         </td>
    //         <td>
    //           <input type="text" value={resultData.normalRanges} />
    //         </td>
    //         <td>
    //           <input type="text" value={resultData.unit} />
    //         </td>
    //         <td>
    //           <input
    //             type="text"
    //             value={resultData.results}
    //             onChange={e => changeResults(e, index)}
    //           />
    //         </td>
    //       </tr>
    //     </tbody>
    //   </table> */}

      <TableContainer component={Paper}>
        <Table className={classes.table} aria-label="simple table">
          <TableHead>
            <TableRow>
              <TableCell>Test Name</TableCell>
              <TableCell align="right">Normal Range</TableCell>
              <TableCell align="right">Unit</TableCell>
              <TableCell align="right">Result</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {resultData.map((row: any, index) => (
              <TableRow key={row.test}>
                <TableCell component="th" scope="row">
                  {row.test}
                </TableCell>
                <TableCell align="right">{row.normalRanges}</TableCell>
                <TableCell align="right">{row.unit}</TableCell>
                <TableCell align="right">
                  <TextField
                    value={resultData.results}
                    onChange={e => changeResults(e, index)}
                  />
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>

      <ReactToPrint
        trigger={printOut}
        content={() => componentRef.current}
        // pageStyle={style}
      />
      <div style={{ display: "none" }}>
        <ComponentToPrint ref={componentRef} data={data} />
      </div>
    </div>
  )
}
